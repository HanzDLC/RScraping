library(dplyr)
library(polite)
library(xml2)
library(magrittr)
library(rvest)
library(httr)
polite::use_manners(save_as = "polite_scrape.R")
url <- 'https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250'
session <- bow(url,
user_agent = "Educational")
session
title <- character(0)
rank <- character(0)
rating <- character(0)
numPeopleVoted <- character(0)
numEpisodes <- character(0)
numYear <- character(0)
numSplit <- c()
title <- scrape(session) %>%
html_nodes('h3.ipc-title__text') %>%
html_text
title[1:51]
##rank <- scrape(session) %>%
html_nodes('')
library(dplyr)
library(polite)
library(xml2)
library(magrittr)
library(rvest)
library(httr)
polite::use_manners(save_as = "polite_scrape.R")
url <- 'https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250'
session <- bow(url,
user_agent = "Educational")
session
title <- character(0)
rank <- character(0)
rating <- character(0)
numPeopleVoted <- character(0)
numEpisodes <- character(0)
numYear <- character(0)
numSplit <- c()
title <- scrape(session) %>%
html_nodes('h3.ipc-title__text') %>%
html_text
title[1:51]
rating <- scrape(session) %>%
html_nodes('span.ratingGroup--imdb-rating')%>%
html_text
title <- scrape(session) %>%
html_nodes('h3.ipc-title__text') %>%
html_text
numPeopleVoted <- scrape(session) %>%
html_nodes('span.ipc-rating-star--voteCount') %>%
html_text
numSplit <- scrape(session) %>%
html_nodes('span.sc-479faa3c-8') %>%
html_text
numSplit
retrievedEpisode <- character()
retrievedEpisoderetrievedEpisode <- character()
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
rank <- retrievedEpisode[1:50]
rank
retrievedYear <- character()
for(i in seq(1, length(numSplit), by = 3) ){
currentYear <- numSplit[i]
retrievedYear <- c(retrievedYear, currentYear)
}
retrievedYear
retrievedYear[1:50]
year <- retrievedYear[1:50]
title
title <- title[2,]
title <- title[2,263]
title <- title[2:]
title[:]
title[2,]
title[,2]
title[2]
title[1:263]
title[2:263]
title <- title[2:250]
title
title <- title[2:251]
title
rm(title)
title <- character(0)
title <- scrape(session) %>%
html_nodes('h3.ipc-title__text') %>%
html_text
title
title <- title[2:251]
title
newTitle <- title[2:251]
newTitle <- title[2:251]
newTitle
newTitle <- title[1:251]
newTitle
newTitle <- title[1:250]
newTitle
newTitle
title <- gsub("\\d+\\.\\s", "", newTitle)
title
splitTitle <- gsub("\\d+\\.\\s", "", newTitle)
splitTitle
year
numEpisodes
retrievedEpisode <- character()
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
numEpisodes
numSplit
rank <- 1:50
rank <- 1:50
numYear <- retrievedYear[1:50]
numYear
numEpisodes
numEpisodes
numYear
wholeDF <- data.frame(rank,title,rating,numPeopleVoted,numYear,numEpisodes)
wholeDF
View(wholeDF)
numPeopleVoted <- numPeopleVoted[1:50]
rating <- rating[1:50]
wholeDF <- data.frame(rank,title,rating,numPeopleVoted,numYear,numEpisodes)
View(wholeDF)
wholeDF <- data.frame(rank,splitTitle,rating,numPeopleVoted,numYear,numEpisodes)
View(wholeDF)
newestTitle <- splitTitle[1:50]
wholeDF <- data.frame(rank,newestTitle,rating,numPeopleVoted,numYear,numEpisodes)
View(wholeDF)
title[1:51]
library(dplyr)
library(polite)
library(xml2)
library(magrittr)
library(rvest)
library(httr)
polite::use_manners(save_as = "polite_scrape.R")
url <- 'https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250'
session <- bow(url,
user_agent = "Educational")
session
title <- character(0)
rank <- 1:50
rating <- character(0)
numPeopleVoted <- character(0)
numEpisodes <- character(0)
numYear <- character(0)
numSplit <- c()
#Scraping the Title.
title <- scrape(session) %>%
html_nodes('h3.ipc-title__text') %>%
html_text
title <- title[2:51]
#Scraping the rating.
rating <- scrape(session) %>%
html_nodes('span.ratingGroup--imdb-rating')%>%
html_text
rating <- rating[1:50]
#Scraping the span: Year, Number of Episodes, and Year Released.
numSplit <- scrape(session) %>%
html_nodes('span.ipc-rating-star--voteCount') %>%
html_text
retrievedEpisode <- character()
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
retrievedEpisode <- character()
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
numSplit
numVoteCount <- numVoteCount[1:50]
numVoteCount <- scrape(session) %>%
html_nodes('span.ipc-rating-star--voteCount') %>%
html_text
numVoteCount <- numVoteCount[1:50]
rm(numSplit)
numSplit <- scrape(session) %>%
html_nodes('span.sc-479faa3c-8') %>%
html_text
numSplit
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
numSplit <- scrape(session) %>%
html_nodes('span.sc-479faa3c-8') %>%
html_text
numSplit
numSplit
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
rm(retrievedEpisode)
rm(currentEpisode)
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
retrievedEpisode <- character()
for(i in seq(2, length(numSplit), by = 3) ){
currentEpisode <- numSplit[i]
retrievedEpisode <- c(retrievedEpisode, currentEpisode)
}
numEpisodes <- retrievedEpisode[1:50]
numEpisodes
retrievedYear <- character()
for(i in seq(1, length(numSplit), by = 3) ){
currentYear <- numSplit[i]
retrievedYear <- c(retrievedYear, currentYear)
}
numYear <- retrievedYear[1:50]
numYear
splitTitle <- gsub("\\d+\\.\\s", "", title)
splitTitle
wholeDF <- data.frame(rank,splitTitle,rating,numPeopleVoted,numYear,numEpisodes)
numVoteCount <- character(0)
numVoteCount <- scrape(session) %>%
html_nodes('span.ipc-rating-star--voteCount') %>%
html_text
numVoteCount <- numVoteCount[1:50]
wholeDF <- data.frame(rank, splitTitle, rating, numVoteCount, numEpisodes, numYear)
View(wholeDF)
updateYear <- sub("^(\\d{4}).*", "\\1", numYear)
wholeDF <- data.frame(rank, splitTitle, rating, numVoteCount, numEpisodes, updateYear)
View(wholeDF)
updateRating <- sub("^(\\d+\\.\\d+).*", "\\1", input_vector)
wholeDF <- data.frame(rank, splitTitle, updateRating, numVoteCount, numEpisodes, updateYear)
View(wholeDF)
updateRating <- sub("^(\\d+\\.\\d+).*", "\\1", rating)
wholeDF <- data.frame(rank, splitTitle, updateRating, numVoteCount, numEpisodes, updateYear)
View(wholeDF)
updateVoteCount <- sub("^\\((\\d+[km]+)\\).*", "\\1", numVoteCount)
wholeDF <- data.frame(rank, splitTitle, updateRating, updateVoteCount, numEpisodes, updateYear)
View(wholeDF)
updateVoteCount <- sub("^\\((\\d+[km]+)\\).*", "\\1", numVoteCount)
wholeDF <- data.frame(rank, splitTitle, updateRating, updateVoteCount, numEpisodes, updateYear)
View(wholeDF)
updateVoteCount <- sub("^\\((\\d+[km]+)\\).*", "\\1", numVoteCount)
numVoteCount
updateVoteCount
updateVoteCount <- sub("^\\((\\d+[km]+)\\).*", "\\1", numVoteCount)
updateVoteCount <-sub("^\\((.*?)\\).*", "\\1", numVoteCount)
updateVoteCount
updateVoteCount <-sub("^\\((.*?)\\).*", "\\1", numVoteCount)
updateVoteCount
numVoteCount
updateVoteCount <- output_vector <- sub(".*?([0-9.]+[km]+).*", "\\1", numVoteCount)
updateVoteCount
updateVoteCount <-sub(".*?([0-9.]+[km]+).*", "\\1", numVoteCount)
updateVoteCount
updateVoteCount <-sub(".*?([0-9.]+[km]+).*", "\\1", numVoteCount)
updateVoteCount <- sub(".*?\\s*\\((\\d+\\.?\\d*[km]+)\\).*", "\\1", numVoteCount)
updateVoteCount
input_vector <- c(" (303k)", " (100k)", " (200m)")
# Extract numeric values with units using sub
output_vector <- sub(".*?\\s*\\((\\d+\\.?\\d*[km]+)\\).*", "\\1", input_vector)
# Print the result
print(output_vector)
input_vector
numVoteCount
updateVoteCount <- sub(".*?\\s*\\((\\S+\\)).*", "\\1", updateVoteCount)
updateVoteCount <- sub(".*?\\s*\\((\\S+\\)).*", "\\1", numVoteCount)
updateVoteCount
updateVoteCount <- sub(".*?\\s*\\((\\S+).*", "\\1", numVoteCount)
updateVoteCount
updateVoteCount <- sub(".*?\\s*\\((\\S+).*", "\\1", numVoteCount)
updateVoteCount
rm(updateVoteCount)
updateVoteCount <- sub(".*?\\s*\\((\\S+).*", "\\1", numVoteCount)
updateVoteCount
rm(updateVoteCount)
updateVoteCount <- sub(".*?\\s*\\((\\S+)\\).*", "\\1", numVoteCount)
updateVoteCount
wholeDF <- data.frame(rank, splitTitle, updateRating,updateVoteCount , numEpisodes, updateYear)
View(wholeDF)
colnames(wholeDF, c("Rank", "Title", "Rating", "Vote Count", "Number of Episodes", "Year Released"))
colnames(wholeDF) <- c("Rank", "Title", "Rating", "Vote Count", "Number of Episodes", "Year Released")
View(wholeDF)
